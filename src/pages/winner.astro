---
import Layout from '../layouts/Layout.astro';

const faqs = [
    {
        question: "Why is there sometimes no winner displayed?",
        answer: "The game has not started yet or the data has expired. Please refresh the page or start a new game. Your current game data depends on your previous game flow to ensure that the game starts from the initial reaping."
    },
    {
        question: "What is the meaning of victory?",
        answer: "The victory page displays the last tribute standing and their achievements in the games. The victor page reveals the Games' victor, but you must complete a session to see who claims the crown."
    },
    {
        question: "Something you need to know",
        answer: "Due to the content and themes present in this Hunger Games simulation, participants must be at least 13 years old to play independently. Players under 13 may participate only with parent or guardian supervision, given the simulation's depiction of conflict. Please note that this is a work of fictional entertainment. All simulated events are purely random and should not be interpreted as promoting real violence. This simulator draws inspiration from Suzanne Collins' Hunger Games literary series. We respect intellectual property rights and will promptly address any copyright concerns."
    }
];
---

<Layout title="Victory" description="Discover who emerges victorious in The Hunger Games simulation through strategy, skill, and survival - just as Katniss and Peeta did in the 74th Hunger Games.">
	<main class="container mx-auto px-4 py-8 pt-20">
		<div class="text-center space-y-6">
			<h1 class="text-4xl font-bold text-primary">
				Victory!
			</h1>

			<div class="mt-8 space-y-4" id="winner-container">
				<!-- 添加默认内容 -->
			</div>

			<div class="mt-12 mb-8">
				<button
					id="summaryButton"
					class="inline-block px-8 py-3 bg-purple-800 hover:bg-purple-900 text-white rounded-lg transition-colors cursor-pointer"
				>
					Summary
				</button>
			</div>
		</div>
        <div class="max-w-3xl mx-auto">
        <div class="space-y-6">
            {faqs.map(faq => (
            <div class="bg-secondary p-6 rounded-xl border border-white/10">
                <h3 class="text-lg font-semibold mb-2">{faq.question}</h3>
                <p class="text-white/70" set:html={faq.answer}></p>
            </div>
            ))}
        </div>
        </div>

	</main>
</Layout>

<script>
    import { tributes } from '../hunger/MainProcess';
    import { loadGameState } from '../hunger/MainProcess';
	function displayWinner() {
		// 获取并记录所有游戏状态
		const tributes = JSON.parse(localStorage.getItem('tributes') || '[]');
		const events = JSON.parse(localStorage.getItem('gameEvents') || '{}');
        const killEvents = JSON.parse(localStorage.getItem('killEvents') || '{}');

        const winner = tributes.find(t => t.status !== 'dead');
        
        const container = document.getElementById('winner-container');
        const summaryButton = document.getElementById('summaryButton');
        
        if (container && winner) {
            container.innerHTML = `
                <div class="bg-primary/10 p-8 rounded-lg">
                    <img src="${winner.avatar}" alt="${winner.name}" class="w-32 h-32 rounded-full mx-auto mb-4">
                    <h2 class="text-2xl font-bold mb-2">${winner.name}</h2>
                    <p class="text-lg text-gray-600">Kills: ${winner.killnum}</p>
                </div>
            `;
            summaryButton?.classList.remove('hidden');
        } else {
            summaryButton?.classList.add('hidden');
            if (!container) console.error('Winner container element not found');
            if (!winner) console.error('No surviving tribute found');
        }
	}

	// 页面加载时显示获胜者);

	// 添加Summary按钮的点击处理
	document.getElementById('summaryButton')?.addEventListener('click', async () => {
		const { updateGameState } = await import('../hunger/MainProcess');
		
        loadGameState();
		// 先保存状态
		updateGameState();
		
		// 然后跳转
		window.location.href = '/summary';
	});

	displayWinner();
</script>

<style>
	main {
		min-height: 100vh;
	}
</style> 