---
import Layout from '../layouts/Layout.astro';

const faqs = [
    {
        question: "What is the Bloodbath?",
        answer: "The games kick off with the infamous Cornucopia scramble! Watch as tributes make split-second decisions: Will they risk it all for supplies and weapons, or flee to safety? Every choice could mean survival or elimination."
    },
    {
        question: "Why is there sometimes no content displayed?",
        answer: "The game has not started yet or the data has expired. Please refresh the page or start a new game. Your current game data depends on your previous game flow to ensure that the game starts from the initial reaping."
    },
]
---

<Layout title="Hunger Games Simulator: The Cornucopia Bloodbath Begins" description="Watch the chaos unfold as tributes make their first crucial decisions at the Cornucopia. Who will grab supplies and weapons? Who will flee? Every choice shapes their fate in the arena.">
	<main class="container mx-auto px-4 py-8 pt-20">
		<div class="text-center space-y-6">
			<h1 class="text-4xl font-bold text-red-800">
				The Bloodbath
			</h1>

			<p class="text-xl text-gray-600 italic">
				As the tributes stand on their podiums, the horn sounds.
			</p>

			<div class="mt-8 space-y-4" id="events-container">
				<!-- 默认内容 -->
			</div>

			<div class="mt-8">
				<button
					id="proceedButton"
					class="px-8 py-3 bg-red-800 hover:bg-red-900 text-white rounded-lg transition-colors"
				>
					Proceed
				</button>
			</div>
		</div>
        <div class="max-w-3xl mx-auto">
        <div class="space-y-6">
            {faqs.map(faq => (
            <div class="bg-secondary p-6 rounded-xl border border-white/10">
                <h3 class="text-lg font-semibold mb-2">{faq.question}</h3>
                <p class="text-white/70" set:html={faq.answer}></p>
            </div>
            ))}
        </div>
        </div>
	</main>
</Layout>

<script>
	function updateDisplay() {
		const events = JSON.parse(localStorage.getItem('gameEvents') || '{}');
		const container = document.getElementById('events-container');
		const proceedButton = document.getElementById('proceedButton');
		
		if (container && events['The Bloodbath']) {
			proceedButton.classList.remove('hidden');
			container.innerHTML = '';
			
			events['The Bloodbath'].forEach(event => {
				const eventDiv = document.createElement('div');
				eventDiv.className = 'mb-6';

				// 添加头像
				const avatarsDiv = document.createElement('div');
				avatarsDiv.className = 'flex justify-center gap-6 mb-3';
				event.tributes.forEach(tribute => {
					const img = document.createElement('img');
					img.src = tribute.avatar;
					img.alt = tribute.name;
					img.className = 'w-16 h-16 rounded-full border-2 border-gray-200 hover:border-red-500 transition-colors cursor-pointer';
					img.title = tribute.name;
					avatarsDiv.appendChild(img);
				});
				eventDiv.appendChild(avatarsDiv);

				// 添加事件文本
				const p = document.createElement('p');
				p.textContent = event.text;
				p.className = 'text-base text-gray-700 bg-red-50 p-3 rounded-lg';
				eventDiv.appendChild(p);

				container.appendChild(eventDiv);
			});
		} else {
			proceedButton.classList.add('hidden');
			if (!container) console.error('Events container element not found');
		}
	}

	updateDisplay();
	window.addEventListener('storage', updateDisplay);

	// 添加Proceed按钮事件处理
	document.getElementById('proceedButton').addEventListener('click', async () => {
		const { processGamePhase } = await import('../hunger/GameFlow');
		await processGamePhase();
	});
</script>

<style>
	main {
		min-height: 100vh;
	}
</style> 